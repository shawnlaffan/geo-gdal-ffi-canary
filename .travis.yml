language: perl
perl:
  - "5.26"
#  - "5.22"

os:
  - linux
  - osx


sudo: required 

branches:
  except:
  - /appveyor/
  - /appveyor_ppm/

cache:
  directories:
    - ${HOME}/perl_modules
    - /usr/local
    - ${HOME}/.alienbuild/plugin_fetch_cache


#env:
#  MAKEFLAGS='-j$(nproc)' - nope - exhausts memory

before_install:
    # Skip build if the commit message contains [skip travis] or [travis skip]
    #  (from https://github.com/htgoebel/pyinstaller/blob/develop/.travis.yml)
  - >
      echo "$TRAVIS_COMMIT_MESSAGE"
      | grep -E  '\[(skip travis|travis skip)\]'
      && echo "[skip travis] has been found, exiting."
      && exit 0 || true

  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew ls --versions perl > /dev/null || brew install perl; fi;
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew outdated perl || brew upgrade perl; fi;
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew ls --versions cpanminus > /dev/null || brew install cpanminus; fi;
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew outdated cpanminus || brew upgrade cpanminus; fi;

#  make sure we get the brewed perl and cpanm etc
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then export PATH=/usr/local/bin:${PATH}; fi;
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then /usr/local/bin/cpanm --version; fi;
  
  - export ALIEN_BUILD_PRELOAD=Fetch::Cache

  #  local::lib target is cached
  - cpanm --notest local::lib
  - echo $(perl -Mlocal::lib=${HOME}/perl_modules)
  - eval "$(perl -Mlocal::lib=${HOME}/perl_modules)"
  #- cpanm --local-lib=~/perl_modules local::lib && eval $(perl -I ~/perl_modules/lib/perl5/ -Mlocal::lib)
  
  #  get deps from cpanfile
  - cpanm --notest --installdeps .
  
  - MAKEFLAGS=-j4 cpanm -v --notest Alien::sqlite
  - ALIEN_INSTALL_TYPE=share cpanm -v Alien::libtiff

  - cpanm -v --notest --installdeps Alien::geos::af

  - MAKEFLAGS=-j4 cpanm -v --notest https://github.com/shawnlaffan/perl-alien-geos.git
  #- MAKEFLAGS=-j4 cpanm -v --notest https://github.com/shawnlaffan/perl-alien-geos.git
  - find `perl -MAlien::geos::af -E'say Alien::geos::af->dist_dir'` -print
  - perl -MAlien::geos::af -E'say join "\n", Alien::geos::af->dynamic_libs'
  - perl -MAlien::geos::af -E'say system "objdump -x $_" for Alien::geos::af->dynamic_libs' | grep NEEDED | sort -u
  - echo XXXX
  - echo GEOS CONFIG 
  - [ "$TRAVIS_OS_NAME" != "osx" ] && cat `perl -MAlien::geos::af -E'print Alien::geos::af->bin_dir . "/geos-config"'`
  - echo XXXX

  #- MAKEFLAGS=-j4 cpanm -v --notest Alien::proj~1.07
  - MAKEFLAGS=-j4 cpanm -v https://github.com/shawnlaffan/perl-alien-proj.git
  - find `perl -MAlien::proj -E'say Alien::proj->dist_dir'` -print

  - export quiet='--quiet'
  - cpanm ${quiet} --notest --installdeps Alien::gdal
  - cpanm -v git://github.com/shawnlaffan/perl-alien-gdal.git
  - cpanm --notest --installdeps Geo::GDAL::FFI

  - echo GDAL libs  
  - perl -MAlien::gdal -E'say join "\n", Alien::gdal->dynamic_libs'
  - perl -MAlien::gdal -E'say system "objdump -x $_" for Alien::gdal->dynamic_libs' | grep NEEDED | sort -u
  - echo GDAL LDD 
  - ldd `perl -MAlien::gdal -E'print q{}, Alien::gdal->dist_dir, q{/lib/libgdal.so}'`
  - perl -MAlien::gdal -E'say Alien::gdal->run_utility ("gdalwarp")'


script:
  - cpanm --reinstall --verbose Geo::GDAL::FFI
